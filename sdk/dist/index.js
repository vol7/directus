function I(e){return e?`/auth/login/${e}`:"/auth/login"}var E="/",G=(e,t)=>(e.endsWith(E)&&(e=e.slice(0,-1)),t.startsWith(E)||(t=E+t),e+t),b=(e,t,r)=>{let s=e.pathname===E?t:G(e.pathname,t),a=new globalThis.URL(s,e);if(r)for(let[p,n]of Object.entries(v(r)))if(n&&typeof n=="object"&&!Array.isArray(n))for(let[c,y]of Object.entries(n))a.searchParams.set(`${p}[${c}]`,String(y));else a.searchParams.set(p,n);return a};function U(e){return typeof e!="object"||!e?!1:"headers"in e&&"ok"in e&&"json"in e&&typeof e.json=="function"&&"text"in e&&typeof e.json=="function"}async function J(e){if(!(typeof e!="object"||!e)){if(U(e)){let t=e.headers.get("Content-Type")?.toLowerCase();if(t?.startsWith("application/json")||t?.startsWith("application/health+json")){let r=await e.json();if(!e.ok)throw r;return"data"in r?r.data:r}if(t?.startsWith("text/html")||t?.startsWith("text/plain")){let r=await e.text();if(!e.ok)throw r;return r}return e}return"data"in e?e.data:e}}var D=async(e,t,r=globalThis.fetch)=>(t.headers=typeof t.headers=="object"&&!Array.isArray(t.headers)?t.headers:{},r(e,t).then(s=>J(s).catch(a=>{let p=typeof a=="object"&&"errors"in a?a.errors:a;return Promise.reject({errors:p,response:s})})));var $=()=>{let e=null;return{get:async()=>e,set:async t=>{e=t}}};var L={msRefreshBeforeExpires:3e4,autoRefresh:!0},H=2**31-1,ce=(e="cookie",t={})=>r=>{let s={...L,...t},a=null,p=null,n=s.storage??$(),c=()=>{n.set({access_token:null,refresh_token:null,expires:null,expires_at:null})},y=async()=>{try{await a}finally{a=null}},x=async()=>{let d=await n.get();return a||!d?.expires_at||d.expires_at<new Date().getTime()+s.msRefreshBeforeExpires&&T().catch(l=>{}),y()},O=d=>{let l=d.expires??0;d.expires_at=new Date().getTime()+l,n.set(d),s.autoRefresh&&l>s.msRefreshBeforeExpires&&l<H&&(p&&clearTimeout(p),p=setTimeout(()=>{p=null,T().catch(f=>{})},l-s.msRefreshBeforeExpires))},T=async()=>(a=(async()=>{let l=await n.get();c();let f={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in s&&(f.credentials=s.credentials);let m={mode:e};e==="json"&&l?.refresh_token&&(m.refresh_token=l.refresh_token),f.body=JSON.stringify(m);let i=b(r.url,"/auth/refresh");return D(i.toString(),f,r.globals.fetch).then(u=>(O(u),u))})(),a);return{refresh:T,async login(d,l,f={}){c();let m={email:d,password:l};"otp"in f&&(m.otp=f.otp),m.mode=f.mode??e;let i=I(f.provider),u=b(r.url,i),h={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(m)};"credentials"in s&&(h.credentials=s.credentials);let g=await D(u.toString(),h,r.globals.fetch);return O(g),g},async logout(){let d=await n.get(),l={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in s&&(l.credentials=s.credentials);let f={mode:e};e==="json"&&d?.refresh_token&&(f.refresh_token=d.refresh_token),l.body=JSON.stringify(f);let m=b(r.url,"/auth/logout");await D(m.toString(),l,r.globals.fetch),this.stopRefreshing(),c()},stopRefreshing(){p&&clearTimeout(p)},async getToken(){return await x().catch(()=>{}),(await n.get())?.access_token??null},setToken(d){n.set({access_token:d,refresh_token:null,expires:null,expires_at:null})}}};var ue=e=>t=>{let r=e??null;return{async getToken(){return r},setToken(s){r=s}}};var k={fetch:globalThis.fetch,WebSocket:globalThis.WebSocket,URL:globalThis.URL,logger:globalThis.console},fe=(e,t={})=>{let r=t.globals?{...k,...t.globals}:k;return{globals:r,url:new r.URL(e),with(s){return{...this,...s(this)}}}};var V={},Ce=(e={})=>t=>{let r={...V,...e};return{async query(s,a,p="items"){let n={method:"POST",body:JSON.stringify({query:s,variables:a})};"credentials"in r&&(n.credentials=r.credentials);let c={};if("getToken"in this){let O=await this.getToken();O&&(c.Authorization=`Bearer ${O}`)}"Content-Type"in c||(c["Content-Type"]="application/json"),n.headers=c;let y=p==="items"?"/graphql":"/graphql/system",x=b(t.url,y);return await D(x.toString(),n,t.globals.fetch)}}};function A(e){return JSON.stringify({...e,type:"auth"})}var K=()=>JSON.stringify({type:"pong"});var F=(e,t=1e3)=>new Promise((r,s)=>{let a=y=>{try{let x=JSON.parse(y.data);typeof x=="object"&&!Array.isArray(x)&&x!==null?(n(),r(x)):(n(),p())}catch{n(),r(y)}},p=()=>s(),n=()=>{clearTimeout(c),e.removeEventListener("message",a),e.removeEventListener("error",p),e.removeEventListener("close",p)};e.addEventListener("message",a),e.addEventListener("error",p),e.addEventListener("close",p);let c=setTimeout(()=>{n(),r(void 0)},t)});function*w(){let e=1;for(;;)yield String(e),e++}var M={authMode:"handshake",heartbeat:!0,debug:!1,reconnect:{delay:1e3,retries:10}};function Ue(e={}){return t=>{e={...M,...e};let r=w(),s={code:"closed"},a={attempts:0,active:!1},p=new Set,n=m=>"getToken"in m,c=(m,...i)=>e.debug&&t.globals.logger[m]("[Directus SDK]",...i),y=async(m,i)=>{let u=new t.globals.URL(m);if(e.authMode==="strict"&&n(i)){let h=await i.getToken();h&&u.searchParams.set("access_token",h)}return u.toString()},x=async m=>{if("url"in e)return await y(e.url,m);if(["ws:","wss:"].includes(t.url.protocol))return await y(t.url,m);let i=new t.globals.URL(t.url.toString());return i.protocol=t.url.protocol==="https:"?"wss:":"ws:",i.pathname="/websocket",await y(i,m)},O=m=>{let i=new Promise((u,h)=>{if(!e.reconnect)return h();if(c("info",`reconnect #${a.attempts} `+(a.attempts>=e.reconnect.retries?"maximum retries reached":`trying again in ${Math.max(100,e.reconnect.delay)}ms`)),a.active)return a.active;if(a.attempts>=e.reconnect.retries)return h();setTimeout(()=>m.connect().then(g=>(p.forEach(S=>{m.sendMessage(S)}),g)).then(u).catch(h),Math.max(100,e.reconnect.delay))});a.attempts+=1,a.active=i.catch(()=>{}).finally(()=>{a.active=!1})},T={open:new Set([]),error:new Set([]),close:new Set([]),message:new Set([])};function d(m){return"type"in m&&"status"in m&&"error"in m&&"code"in m.error&&"message"in m.error&&m.type==="auth"&&m.status==="error"}async function l(m,i){if(s.code==="open"){if(m.error.code==="TOKEN_EXPIRED"&&(c("warn","Authentication token expired!"),n(i))){let u=await i.getToken();if(!u)throw Error("No token for re-authenticating the websocket");s.connection.send(A({access_token:u}))}if(m.error.code==="AUTH_TIMEOUT")return s.firstMessage&&e.authMode==="public"?(c("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1):c("warn","Authentication timed out!"),s.connection.close();if(m.error.code==="AUTH_FAILED"){if(s.firstMessage&&e.authMode==="public")return c("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1,s.connection.close();c("warn","Authentication failed!")}}}let f=async m=>{for(;s.code==="open";){let i=await F(s.connection).catch(()=>{});if(i){if(d(i)){await l(i,m),s.firstMessage=!1;continue}if(e.heartbeat&&i.type==="ping"){s.connection.send(K()),s.firstMessage=!1;continue}T.message.forEach(u=>{s.code==="open"&&u.call(s.connection,i)}),s.firstMessage=!1}}};return{async connect(){if(s.code==="connecting")return await s.connection;if(s.code!=="closed")throw new Error(`Cannot connect when state is "${s.code}"`);let m=this,i=await x(m);c("info",`Connecting to ${i}...`);let u=new Promise((h,g)=>{let S=!1,C=new t.globals.WebSocket(i);C.addEventListener("open",async j=>{if(c("info","Connection open."),s={code:"open",connection:C,firstMessage:!0},a.attempts=0,a.active=!1,f(m),e.authMode==="handshake"&&n(m)){let R=await m.getToken();if(!R)throw Error("No token for authenticating the websocket. Make sure to provide one or call the login() function beforehand.");C.send(A({access_token:R}));let P=await F(C);if(P&&"type"in P&&"status"in P&&P.type==="auth"&&P.status==="ok")c("info","Authentication successful!");else return g("Authentication failed while opening websocket connection")}T.open.forEach(R=>R.call(C,j)),S=!0,h(C)}),C.addEventListener("error",j=>{c("warn","Connection errored."),T.error.forEach(R=>R.call(C,j)),C.close(),s={code:"error"},S||g(j)}),C.addEventListener("close",j=>{c("info","Connection closed."),T.close.forEach(R=>R.call(C,j)),r=w(),s={code:"closed"},O(this),S||g(j)})});return s={code:"connecting",connection:u},u},disconnect(){s.code==="open"&&s.connection.close()},onWebSocket(m,i){if(m==="message"){let u=function(h){if(typeof h.data!="string")return i.call(this,h);try{return i.call(this,JSON.parse(h.data))}catch{return i.call(this,h)}};return T[m].add(u),()=>T[m].delete(u)}return T[m].add(i),()=>T[m].delete(i)},sendMessage(m){if(s.code!=="open")throw new Error('Cannot send messages without an open connection. Make sure you are calling "await client.connect()".');if(typeof m=="string")return s.connection.send(m);"uid"in m||(m.uid=r.next().value),s.connection.send(JSON.stringify(m))},async subscribe(m,i={}){"uid"in i||(i.uid=r.next().value),p.add({...i,collection:m,type:"subscribe"}),s.code!=="open"&&(c("info","No connection available for subscribing!"),await this.connect()),this.sendMessage({...i,collection:m,type:"subscribe"});let u=!0;async function*h(){for(;u&&s.code==="open";){let S=await F(s.connection).catch(()=>{});if(S){if("type"in S&&"status"in S&&S.type==="subscribe"&&S.status==="error")throw S;"type"in S&&"uid"in S&&S.type==="subscription"&&S.uid===i.uid&&(yield S)}}e.reconnect&&a.active&&(await a.active,s.code==="open"&&(s.connection.send(JSON.stringify({...i,collection:m,type:"subscribe"})),yield*h()))}let g=()=>{p.delete({...i,collection:m,type:"subscribe"}),this.sendMessage({uid:i.uid,type:"unsubscribe"}),u=!1};return{subscription:h(),unsubscribe:g}}}}}var $e=e=>new Promise(t=>setTimeout(()=>t(),e));var ze=(e,t,r={})=>()=>{let s=I(r.provider),a={email:e,password:t};return"otp"in r&&(a.otp=r.otp),a.mode=r.mode??"cookie",{path:s,method:"POST",body:JSON.stringify(a)}};var Ye=(e,t="cookie")=>()=>({path:"/auth/logout",method:"POST",body:JSON.stringify(e?{refresh_token:e,mode:t}:{mode:t})});var et=(e,t)=>()=>({path:"/auth/password/request",method:"POST",body:JSON.stringify({email:e,...t?{reset_url:t}:{}})});var rt=(e,t)=>()=>({path:"/auth/password/reset",method:"POST",body:JSON.stringify({token:e,password:t})});var st=(e=!1)=>()=>({path:e?"/auth?sessionOnly":"/auth",method:"GET"});var mt=(e="cookie",t)=>()=>({path:"/auth/refresh",method:"POST",body:JSON.stringify(e==="json"?{refresh_token:t,mode:e}:{mode:e})});var St=(e,t)=>()=>({path:"/activity/comment",params:t??{},body:JSON.stringify(e),method:"POST"});var ft=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"POST"});var Qt=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"}),Tt=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"});var gt=(e,t,r)=>()=>({path:`/fields/${e}`,params:r??{},body:JSON.stringify(t),method:"POST"});var bt=(e,t)=>()=>({path:"/files",method:"POST",body:e,params:t??{},headers:{"Content-Type":"multipart/form-data"}}),Dt=(e,t={},r)=>()=>({path:"/files/import",method:"POST",body:JSON.stringify({url:e,data:t}),params:r??{}});var jt=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"}),Pt=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"});var Et=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"}),Ft=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"});import{isSystemCollection as W}from"@directus/system-data";var Nt=(e,t,r)=>()=>{let s=String(e);if(W(s))throw new Error("Cannot use createItems for core collections");return{path:`/items/${s}`,params:r??{},body:JSON.stringify(t),method:"POST"}},vt=(e,t,r)=>()=>{let s=String(e);if(W(s))throw new Error("Cannot use createItem for core collections");return{path:`/items/${s}`,params:r??{},body:JSON.stringify(t),method:"POST"}};var Jt=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"}),$t=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"});var Kt=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"}),Wt=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"});var Lt=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"}),Ht=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"});var Mt=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"}),_t=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"});var qt=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"}),zt=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"});var Yt=e=>()=>({path:"/relations",body:JSON.stringify(e),method:"POST"});var er=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"}),tr=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"});var or=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"}),sr=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"});var mr=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"}),nr=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"});var cr=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"}),pr=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"});var hr=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"}),yr=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"});var Sr=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"}),lr=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"});var kr=e=>()=>({path:`/activity/comment/${e}`,method:"DELETE"});var Wr=e=>()=>({path:`/collections/${e}`,method:"DELETE"});var N=e=>{let t=(r,s=[])=>{if(typeof r=="object"){let a=[];for(let p in r){let n=r[p]??[];if(Array.isArray(n))for(let c of n)a.push(t(c,[...s,p]));else if(typeof n=="object")for(let c of Object.keys(n)){let y=n[c];for(let x of y)a.push(t(x,[...s,`${p}:${c}`]))}}return a.flatMap(p=>p)}return[...s,String(r)].join(".")};return e.flatMap(r=>t(r))},v=e=>{let t={};Array.isArray(e.fields)&&e.fields.length>0&&(t.fields=N(e.fields).join(",")),e.filter&&Object.keys(e.filter).length>0&&(t.filter=JSON.stringify(e.filter)),e.search&&(t.search=e.search),"sort"in e&&e.sort&&(t.sort=typeof e.sort=="string"?e.sort:e.sort.join(",")),typeof e.limit=="number"&&e.limit>=-1&&(t.limit=String(e.limit)),typeof e.offset=="number"&&e.offset>=0&&(t.offset=String(e.offset)),typeof e.page=="number"&&e.page>=1&&(t.page=String(e.page)),e.deep&&Object.keys(e.deep).length>0&&(t.deep=JSON.stringify(e.deep)),e.alias&&Object.keys(e.alias).length>0&&(t.alias=JSON.stringify(e.alias)),e.aggregate&&Object.keys(e.aggregate).length>0&&(t.aggregate=JSON.stringify(e.aggregate)),e.groupBy&&e.groupBy.length>0&&(t.groupBy=e.groupBy.join(","));for(let[r,s]of Object.entries(e))r in t||(typeof s=="string"||typeof s=="number"||typeof s=="boolean"?t[r]=String(s):t[r]=JSON.stringify(s));return t};var o=(e,t)=>{if(e.length===0)throw new Error(t)};import{isSystemCollection as _}from"@directus/system-data";var Q=(e,t)=>{if(_(String(e)))throw new Error(t)};var Zr=e=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",body:JSON.stringify(e),method:"DELETE"}),eo=e=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,method:"DELETE"});var oo=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"DELETE"});var mo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/files",body:JSON.stringify(e),method:"DELETE"}),no=e=>()=>(o(e,"Key cannot be empty"),{path:`/files/${e}`,method:"DELETE"});var po=e=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",body:JSON.stringify(e),method:"DELETE"}),uo=e=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,method:"DELETE"});var So=e=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",body:JSON.stringify(e),method:"DELETE"}),lo=e=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,method:"DELETE"});var Qo=(e,t)=>()=>{let r={};return o(String(e),"Collection cannot be empty"),Q(e,"Cannot use deleteItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),r={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),r={query:t}),{path:`/items/${e}`,body:JSON.stringify(r),method:"DELETE"}},To=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use deleteItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,method:"DELETE"});var Ro=e=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",body:JSON.stringify(e),method:"DELETE"}),bo=e=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,method:"DELETE"});var jo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",body:JSON.stringify(e),method:"DELETE"}),Po=e=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,method:"DELETE"});var Fo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",body:JSON.stringify(e),method:"DELETE"}),Ao=e=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,method:"DELETE"});var vo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",body:JSON.stringify(e),method:"DELETE"}),Uo=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,method:"DELETE"});var ko=e=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",body:JSON.stringify(e),method:"DELETE"}),Ko=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,method:"DELETE"});var Lo=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"DELETE"});var Mo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",body:JSON.stringify(e),method:"DELETE"}),_o=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,method:"DELETE"});var zo=e=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",body:JSON.stringify(e),method:"DELETE"}),Xo=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,method:"DELETE"});var es=e=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",body:JSON.stringify(e),method:"DELETE"}),ts=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,method:"DELETE"});var ss=e=>()=>(o(e,"Keys cannot be empty"),{path:"/users",body:JSON.stringify(e),method:"DELETE"}),as=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,method:"DELETE"});var is=e=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",body:JSON.stringify(e),method:"DELETE"}),cs=e=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,method:"DELETE"});var hs=e=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",body:JSON.stringify(e),method:"DELETE"}),ys=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,method:"DELETE"});var Js=e=>()=>({path:"/activity",params:e??{},method:"GET"}),$s=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/${e}`,params:t??{},method:"GET"});import{isSystemCollection as B}from"@directus/system-data";var Ls=(e,t)=>()=>{let r=String(e);return o(r,"Collection cannot be empty"),{path:B(r)?`/${r.substring(9)}`:`/items/${r}`,method:"GET",params:{...t.query??{},...t.groupBy?{groupBy:t.groupBy}:{},aggregate:t.aggregate}}};var Ms=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.body}),_s=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.blob()}),Bs=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.arrayBuffer()});var Xs=()=>()=>({path:"/collections",method:"GET"}),Ys=e=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,method:"GET"});var ta=e=>()=>({path:"/dashboards",params:e??{},method:"GET"}),ra=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/dashboards/${e}`,params:t??{},method:"GET"});var sa=()=>()=>({path:"/extensions/",method:"GET"});var na=()=>()=>({path:"/fields",method:"GET"}),ia=e=>()=>(o(e,"Collection cannot be empty"),{path:`/fields/${e}`,method:"GET"}),ca=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"GET"});var ha=e=>()=>({path:"/files",params:e??{},method:"GET"}),ya=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/files/${e}`,params:t??{},method:"GET"});var la=e=>()=>({path:"/flows",params:e??{},method:"GET"}),fa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/flows/${e}`,params:t??{},method:"GET"});var Ta=e=>()=>({path:"/folders",params:e??{},method:"GET"}),Ca=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/folders/${e}`,params:t??{},method:"GET"});var ba=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readItems for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"}),Da=(e,t,r)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,params:r??{},method:"GET"});var Pa=e=>()=>({path:"/notifications",params:e??{},method:"GET"}),Ia=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/notifications/${e}`,params:t??{},method:"GET"});var Aa=e=>()=>({path:"/operations",params:e??{},method:"GET"}),wa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/operations/${e}`,params:t??{},method:"GET"});var Ua=e=>()=>({path:"/panels",params:e??{},method:"GET"}),Ja=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/panels/${e}`,params:t??{},method:"GET"});var Ka=e=>()=>({path:"/permissions",params:e??{},method:"GET"}),Wa=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:t??{},method:"GET"}),Ga=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),{path:`/permissions/me/${t?`${e}/${t}`:`${e}`}`,method:"GET"});var Va=e=>()=>({path:"/presets",params:e??{},method:"GET"}),Ma=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:t??{},method:"GET"});var qa=()=>()=>({path:"/relations",method:"GET"}),za=e=>()=>({path:`/relations/${e}`,method:"GET"}),Xa=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"GET"});var em=e=>()=>({path:"/revisions",params:e??{},method:"GET"}),tm=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/revisions/${e}`,params:t??{},method:"GET"});var sm=e=>()=>({path:"/roles",params:e??{},method:"GET"}),am=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,params:t??{},method:"GET"});var nm=e=>()=>({path:"/settings",params:e??{},method:"GET"});var pm=e=>()=>({path:"/shares",params:e??{},method:"GET"}),um=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,params:t??{},method:"GET"});var dm=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readSingleton for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"});var fm=e=>()=>({path:"/translations",params:e??{},method:"GET"}),xm=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:t??{},method:"GET"});var Cm=e=>()=>({path:"/users",params:e??{},method:"GET"}),gm=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,params:t??{},method:"GET"}),Rm=e=>()=>({path:"/users/me",params:e??{},method:"GET"});var Om=e=>()=>({path:"/versions",params:e??{},method:"GET"}),jm=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/versions/${e}`,params:t??{},method:"GET"});var Em=e=>()=>({path:"/webhooks",params:e??{},method:"GET"}),Fm=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:t??{},method:"GET"});var mn=e=>()=>({method:"POST",path:"/schema/apply",body:JSON.stringify(e)});var cn=(e,t=!1)=>()=>({method:"POST",path:"/schema/diff",params:t?{force:t}:{},body:JSON.stringify(e)});var un=()=>()=>({method:"GET",path:"/schema/snapshot"});var fn=(e="item")=>()=>({method:"GET",path:e==="item"?"/server/specs/graphql":"/server/specs/graphql/system"});var Qn=()=>()=>({method:"GET",path:"/server/health"});var Cn=()=>()=>({method:"GET",path:"/server/info"});var Rn=()=>()=>({method:"GET",path:"/server/specs/oas"});var Dn=()=>()=>({method:"GET",path:"/server/ping"});var Nn=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/comment/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Jn=(e,t,r)=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Kn=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Wn=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Hn=(e,t,r)=>()=>(e!==null&&o(e,"Bundle cannot be an empty string"),o(t,"Name cannot be empty"),{path:e?`/extensions/${e}/${t}`:`/extensions/${t}`,params:{},body:JSON.stringify(r),method:"PATCH"});var _n=(e,t,r,s)=>()=>(o(e,"Keys cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,params:s??{},body:JSON.stringify(r),method:"PATCH"});var zn=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/files",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Xn=(e,t,r)=>()=>(o(e,"Key cannot be empty"),t instanceof FormData?{path:`/files/${e}`,params:r??{},body:t,method:"PATCH",headers:{"Content-Type":"multipart/form-data"}}:{path:`/files/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var ei=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),ti=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var si=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),ai=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var ii=(e,t,r,s)=>()=>{let a={};return o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),a={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),a={query:t}),a.data=r,{path:`/items/${e}`,params:s??{},body:JSON.stringify(a),method:"PATCH"}},ci=(e,t,r,s)=>()=>(o(String(t),"Key cannot be empty"),o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateItem for core collections"),{path:`/items/${e}/${t}`,params:s??{},body:JSON.stringify(r),method:"PATCH"});var hi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),yi=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var li=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),fi=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Ti=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ci=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var bi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Di=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Pi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ii=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Ai=(e,t,r,s)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,params:s??{},body:JSON.stringify(r),method:"PATCH"});var vi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ui=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/roles/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var $i=(e,t)=>()=>({path:"/settings",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Wi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Gi=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/shares/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Vi=(e,t,r)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateSingleton for core collections"),{path:`/items/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Bi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),qi=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Yi=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/users",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Zi=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/users/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"}),ec=(e,t)=>()=>({path:"/users/me",params:t??{},body:JSON.stringify(e),method:"PATCH"});var oc=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),sc=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var nc=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),ic=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Nc=()=>()=>({method:"POST",path:"/utils/cache/clear"});var Uc=(e,t,r,s)=>()=>({method:"POST",path:`/utils/export/${e}`,body:JSON.stringify({format:t,query:r,file:s})});var $c=(e,t,r)=>()=>e==="GET"?{path:`/flows/trigger/${t}`,params:r??{},method:"GET"}:{path:`/flows/trigger/${t}`,body:JSON.stringify(r??{}),method:"POST"};var Kc=e=>()=>({method:"POST",path:"/utils/hash/generate",body:JSON.stringify({string:e})}),Wc=(e,t)=>()=>({method:"POST",path:"/utils/hash/verify",body:JSON.stringify({string:e,hash:t})});var Lc=(e,t)=>()=>({path:`/utils/import/${e}`,method:"POST",body:t,headers:{"Content-Type":"multipart/form-data"}});var Vc=(e,t)=>()=>({path:`/operations/trigger/${e}`,body:JSON.stringify(t??{}),method:"POST"});var _c=(e,t,r="cookie")=>()=>({path:"/shares/auth",method:"POST",body:JSON.stringify({share:e,password:t,mode:r})}),Bc=(e,t)=>()=>({path:"/shares/invite",method:"POST",body:JSON.stringify({share:e,emails:t})}),qc=e=>()=>({path:`/shares/info/${e}`,method:"GET"});var Xc=(e,t,r)=>()=>({method:"POST",path:`/utils/sort/${e}`,body:JSON.stringify({item:t,to:r})});var Zc=(e,t,r)=>()=>({path:"/users/invite",method:"POST",body:JSON.stringify({email:e,role:t,...r?{invite_url:r}:{}})}),ep=(e,t)=>()=>({path:"/users/invite/accept",method:"POST",body:JSON.stringify({token:e,password:t})}),tp=e=>()=>({path:"/users/me/tfa/generate",method:"POST",body:JSON.stringify({password:e})}),rp=(e,t)=>()=>({path:"/users/me/tfa/enable",method:"POST",body:JSON.stringify({secret:e,otp:t})}),op=e=>()=>({path:"/users/me/tfa/disable",method:"POST",body:JSON.stringify({otp:e})});var mp=(e,t)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/save`,method:"POST",body:JSON.stringify(t)}),np=e=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/compare`,method:"GET"}),ip=(e,t,r)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/promote`,method:"POST",body:JSON.stringify(r?{mainHash:t,fields:r}:{mainHash:t})});var q={},Ap=(e={})=>t=>{let r={...q,...e};return{async request(s){let a=s();if(a.headers||(a.headers={}),"Content-Type"in a.headers?a.headers["Content-Type"]==="multipart/form-data"&&delete a.headers["Content-Type"]:a.headers["Content-Type"]="application/json","getToken"in this){let y=await this.getToken();y&&(a.headers||(a.headers={}),a.headers.Authorization=`Bearer ${y}`)}let p=b(t.url,a.path,a.params),n={method:a.method??"GET",headers:a.headers??{}};"credentials"in r&&(n.credentials=r.credentials),a.body&&(n.body=a.body),a.onRequest&&(n=await a.onRequest(n)),r.onRequest&&(n=await r.onRequest(n));let c=await D(p.toString(),n,t.globals.fetch);return"onResponse"in a&&(c=await a.onResponse(c,n)),"onResponse"in e&&(c=await e.onResponse(c,n)),c}}};function Np(e,t){return()=>{let r=e();return typeof t=="function"?r.onRequest=t:r.onRequest=s=>({...s,...t}),r}}function Jp(e){return()=>{let t=e();return t.method==="GET"&&t.params&&(t.method="SEARCH",t.body=JSON.stringify({query:{...t.params,fields:N(t.params.fields??[])}}),delete t.params),t}}function kp(e,t){return()=>{let r=t();return e&&(r.headers||(r.headers={}),r.headers.Authorization=`Bearer ${e}`),r}}function Wp(e){return()=>e}export{ep as acceptUserInvite,Ls as aggregate,A as auth,_c as authenticateShare,ce as authentication,Nc as clearCache,np as compareContentVersion,ft as createCollection,St as createComment,yr as createContentVersion,hr as createContentVersions,Tt as createDashboard,Qt as createDashboards,fe as createDirectus,gt as createField,Pt as createFlow,jt as createFlows,Ft as createFolder,Et as createFolders,vt as createItem,Nt as createItems,$t as createNotification,Jt as createNotifications,Wt as createOperation,Kt as createOperations,Ht as createPanel,Lt as createPanels,_t as createPermission,Mt as createPermissions,zt as createPreset,qt as createPresets,Yt as createRelation,tr as createRole,er as createRoles,sr as createShare,or as createShares,nr as createTranslation,mr as createTranslations,pr as createUser,cr as createUsers,lr as createWebhook,Sr as createWebhooks,Wp as customEndpoint,Wr as deleteCollection,kr as deleteComment,cs as deleteContentVersion,is as deleteContentVersions,eo as deleteDashboard,Zr as deleteDashboards,oo as deleteField,no as deleteFile,mo as deleteFiles,uo as deleteFlow,po as deleteFlows,lo as deleteFolder,So as deleteFolders,To as deleteItem,Qo as deleteItems,bo as deleteNotification,Ro as deleteNotifications,Po as deleteOperation,jo as deleteOperations,Ao as deletePanel,Fo as deletePanels,Uo as deletePermission,vo as deletePermissions,Ko as deletePreset,ko as deletePresets,Lo as deleteRelation,_o as deleteRole,Mo as deleteRoles,Xo as deleteShare,zo as deleteShares,ts as deleteTranslation,es as deleteTranslations,as as deleteUser,ss as deleteUsers,ys as deleteWebhook,hs as deleteWebhooks,op as disableTwoFactor,rp as enableTwoFactor,N as formatFields,Kc as generateHash,tp as generateTwoFactorSecret,w as generateUid,I as getAuthEndpoint,Ce as graphql,Dt as importFile,Bc as inviteShare,Zc as inviteUser,ze as login,Ye as logout,$ as memoryStorage,F as messageCallback,et as passwordRequest,rt as passwordReset,K as pong,ip as promoteContentVersion,v as queryToParams,Js as readActivities,$s as readActivity,Bs as readAssetArrayBuffer,_s as readAssetBlob,Ms as readAssetRaw,Ys as readCollection,Xs as readCollections,jm as readContentVersion,Om as readContentVersions,ra as readDashboard,ta as readDashboards,sa as readExtensions,ca as readField,na as readFields,ia as readFieldsByCollection,ya as readFile,ha as readFiles,fa as readFlow,la as readFlows,Ca as readFolder,Ta as readFolders,fn as readGraphqlSdl,Da as readItem,Ga as readItemPermissions,ba as readItems,Rm as readMe,Ia as readNotification,Pa as readNotifications,Rn as readOpenApiSpec,wa as readOperation,Aa as readOperations,Ja as readPanel,Ua as readPanels,Wa as readPermission,Ka as readPermissions,Ma as readPreset,Va as readPresets,st as readProviders,Xa as readRelation,za as readRelationByCollection,qa as readRelations,tm as readRevision,em as readRevisions,am as readRole,sm as readRoles,nm as readSettings,um as readShare,qc as readShareInfo,pm as readShares,dm as readSingleton,xm as readTranslation,fm as readTranslations,gm as readUser,Cm as readUsers,Fm as readWebhook,Em as readWebhooks,Ue as realtime,mt as refresh,Ap as rest,mp as saveToContentVersion,mn as schemaApply,cn as schemaDiff,un as schemaSnapshot,Qn as serverHealth,Cn as serverInfo,Dn as serverPing,$e as sleep,ue as staticToken,Q as throwIfCoreCollection,o as throwIfEmpty,$c as triggerFlow,Vc as triggerOperation,Jn as updateCollection,Nn as updateComment,sc as updateContentVersion,oc as updateContentVersions,Wn as updateDashboard,Kn as updateDashboards,Hn as updateExtension,_n as updateField,Xn as updateFile,zn as updateFiles,ti as updateFlow,ei as updateFlows,ai as updateFolder,si as updateFolders,ci as updateItem,ii as updateItems,ec as updateMe,yi as updateNotification,hi as updateNotifications,fi as updateOperation,li as updateOperations,Ci as updatePanel,Ti as updatePanels,Di as updatePermission,bi as updatePermissions,Ii as updatePreset,Pi as updatePresets,Ai as updateRelation,Ui as updateRole,vi as updateRoles,$i as updateSettings,Gi as updateShare,Wi as updateShares,Vi as updateSingleton,qi as updateTranslation,Bi as updateTranslations,Zi as updateUser,Yi as updateUsers,ic as updateWebhook,nc as updateWebhooks,bt as uploadFiles,Xc as utilitySort,Uc as utilsExport,Lc as utilsImport,Wc as verifyHash,Np as withOptions,Jp as withSearch,kp as withToken};
//# sourceMappingURL=index.js.map